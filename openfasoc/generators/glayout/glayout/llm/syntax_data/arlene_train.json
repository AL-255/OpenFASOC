{
    "data": [ 
        {
            "NLPfilename": "BiasVoltageGenerator",
            "LLMprompt": "create a biased voltage generator using an nfet and pfet called m1 and m2 with width, multiplier, and fingers as parameters. Use common centroid technique"
        },

        {
            "NLPfilename": "CascodeCommonGate",
            "LLMprompt": "create a common cascode gate using two nfets called m1 and m2 with common centroid technique. make the width a parameter."
        },
        
        {
            "NLPfilename": "ClassBPushPull",
            "LLMprompt": "make a class b pull with an nfet and a pfet called m1 and m2 respectively. make the width, fingers, and multipliers parameters and use common centroid technique."
        },

        {
            "NLPfilename": "CMbasic",
            "LLMprompt": "make a basic current mirror with 2 nmos called m1 and m2 with the parameters width and multiplier"
        },
        
        {
            "NLPfilename": "BiasVGen",
            "LLMprompt": "create a biased voltage generator using an nfet and pfet called m1 and m2 with width and multiplier as parameters. Use common centroid technique"
        },
        
        {
            "NLPfilename": "CascodeCommonGate1",
            "LLMprompt": "using two nmos, create a common cascode gate with width as a parameter. route the source of one to the drain of the other"
        },

        {
            "NLPfilename": "cmirror_absmove",
            "LLMprompt": "place 2 nfets, one with width 5 and the other with width 10 and place the second one at (5,5)"
        },

        {
            "NLPfilename": "CommonSourceAmplifier",
            "LLMprompt": "Place an nfet and pfet to create a common source amplifier. make the width, multipliers, and fingers parameters. Connect the drain of the nfet to the source of the pfet"
        },

        {
            "NLPfilename": "CommonSourceAmplifier1",
            "LLMprompt": "Create a common source amplifier using two nmos. Make width, multipliers and fingers parameters and set substrate tap and dnwell to false"
        },

        {
            "NLPfilename": "CommonSourceAmplifier2",
            "LLMprompt": "With width, multipliers, and fingers as parameters, make a common source amplifier"
        },

        {
            "NLPfilename": "ConstBiasVoltageGen",
            "LLMprompt": "Make a constant bias voltage generator with 2 nfets. make the width fingers and rmult as parameters. connect the two nfets using 3 routes"
        },

        {
            "NLPfilename": "CrossCoupledInverters",
            "LLMprompt": "Using interdigitized technique, create cross coupled inverters using 4 transistors with the top row being pfets and the bottom row being nfets"
        },

        {
            "NLPfilename": "CurrentMirror",
            "LLMprompt": "Make a current mirror with 2 nfets with parameters width and rmult."
        },

        {
            "NLPfilename": "DegenCommonGate",
            "LLMprompt": "Make a degen common gate with 2 nfets with parameters width, rmult, and fingers. route with a c route and straight route"
        },

        {
            "NLPfilename": "DegenCommonSource",
            "LLMprompt": "Make a degen common source with 2 nfets with the parameters width, rmult, and fingers for each. route the nfets and the ties"
        },

        {
            "NLPfilename": "DiffPair",
            "LLMprompt": "Make a diffpair with parameters, width, fingers, and rmult for 2 nfets. Set the length to 10"
        },

        {
            "NLPfilename": "LowNoiseAmp",
            "LLMprompt": "make a low noise amplifiers using 2 nfets with the width fingers and rmult as parameters."
        },

        {
            "NLPfilename": "NoiseXDiffConv",
            "LLMprompt": "make a noise x diff using 2 nfets with parameters width, fingers, and rmult as parameters. route the gate of 1 to the source of the other and route the ties"
        },

        {
            "NLPfilename": "PTATVoltageGen",
            "LLMprompt": "create a PTAT voltage generator using 2 nfets with the parameters of fingers, rmult, and width for each. route bewteen the two with 3 routes"
        },

        {
            "NLPfilename": "SourceFollow",
            "LLMprompt": "make a source follower by connecting 2 nfets with the parameters width and rmult and route between the two from source of 1 to drain of the other"
        },

        {
            "NLPfilename": "StrongArmLatch",
            "LLMprompt": "make a strong arm latch by importing cross coupled inverters and setting its number of fingers to 4. Use a diffpair, 2 nfets, and 2 pfets "
        },

        {
            "NLPfilename": "CTATVGen",
            "LLMprompt": "make a ctat voltage generator with 2 nfets. Make m1 and m2 (the nfets) have parameters width and rmult."
        },

        {
            "NLPfilename": "RegCascode",
            "LLMprompt": "Make a regulated cascode with 2 nfets that have width and rmult as parameters. Route the two nfets with 2 routes"
        },

        {
            "NLPfilename": "ULPD",
            "LLMprompt": "Create an ultra low powered diode with 2 nfets each with parameters width, multipliers and fingers. Use 2 routes"
        },

        {
            "NLPfilename": "Varactor",
            "LLMprompt": "make a variable reactance diode parametrizing the width and multipliers. Use common centroid technique"
        },

        {
            "NLPfilename": "VoltageFollower",
            "LLMprompt": "Using common centroid technique, make a voltage follower parametrizing the width and multipliers"
        },

        {
            "NLPfilename": "opamp_training",
            "LLMprompt": "make an opamp with parameters load_pfet_width, load_pfet_fingers, load_pfet_multipliers and load_curr_source_fingers, load_curr_source_width_ref, load_curr_source_width_mirr, mim_cap_size, and mim_cap_rows"
        }

    ]
}

