############################################################################################################
##                                                                                                        ##
##    The _generator_is variable is a dictionary of keys and value that has information about which       ##
##    workflow is being run. The values for each keys are decided based on how this script is called      ##
##    by the .yml files in .github/workflows                                                              ##
##                                                                                                        ##
##    The cryo_library variable is used to ascertain which library (sky130hd_cryo, sky130hs_cryo,         ##
##    sky130hvl_cryo) workflow is being run                                                               ##
##                                                                                                        ##
##    1. DRC and LVS Filename Declaration -                                                               ##
##        This section declares the possible DRC and LVS filenames for the different generators           ##
##        The if condition checks for sky130hd_temp and sky130hvl_ldo, and the elif condition             ##
##        checks for the various possible cryo libraries                                                  ##
##                                                                                                        ##
##    2. DRC Check -                                                                                      ##
##        The if condition checks if the content in the generated DRC report file matches the template    ##
##        report DRC report file stored in .github/scripts/expected_drc_reports/ .                        ##
##        The else condition checks if the number of lines in the DRC report files for the temp-sense-    ##
##        gen and cryo-gen is greater than 3 (which is the case if there is a non-zero number of errors   ##
##        in the make process                                                                             ##
##                                                                                                        ##
##    3. LVS Check -                                                                                      ##
##        The if condition checks if the LVS report generated by the cryo-gen make has the word 'failed'  ##
##        in the last line (throws an error if yes).                                                      ##
##        The else condition carries out a search for the word 'failed' in the LVS reports for ldo-gen    ##
##        and temp-sense-gen and raises a valueError if found.                                            ##
##                                                                                                        ##
##    4. Result File Check -                                                                              ##
##        This section calls the check_gen_files() function in generators/common/check_gen_files.py       ##
##        script. This function checks if the various files (.v, .sdc, .cdl, .sp, .spice, etc) have been  ##
##        generated for the required generators.                                                          ##
##        Takes input parameters as the test.json filename, the dictionary of possible generators, and    ##
##        the cryo_library                                                                                ##
##                                                                                                        ##
############################################################################################################


import sys
import json
import os
import re, subprocess
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
from common.check_gen_files import check_gen_files

sys.stdout.flush()

_generator_is = {
    'sky130hvl_ldo': 0, 
    'sky130hd_temp': 0, 
    'sky130XX_cryo': 0
}

if len(sys.argv) == 1:
    _generator_is['sky130hd_temp'] = 1
elif len(sys.argv) > 1:
    if sys.argv[1] == 'sky130hvl_ldo':
        _generator_is['sky130hvl_ldo'] = 1
    else:
        _generator_is['sky130XX_cryo'] = 1

if _generator_is['sky130XX_cryo']:
    # check which cryo-gen library's workflow is being run
    dir_path = r'flow/reports'
    lib = os.listdir(dir_path)
    cryo_library = str(lib[0])

## DRC and LVS Filename Declaration 
if _generator_is['sky130hd_temp'] or _generator_is['sky130hvl_ldo']:
    drc_filename = "work/6_final_drc.rpt"
    lvs_filename = "work/6_final_lvs.rpt"
elif sys.argv[1] == cryo_library:
    drc_filename = "flow/reports/" + sys.argv[1] + "/cryo/6_final_drc.rpt"
    lvs_filename = "flow/reports/" + sys.argv[1] + "/cryo/6_final_lvs.rpt"


## DRC check 
if _generator_is['sky130hvl_ldo']:
    expected_ldo_rpt_filename = "../../../.github/scripts/expected_drc_reports/expected_ldo_drc.rpt"
    with open(drc_filename) as f1, open(expected_ldo_rpt_filename) as f2:
        content1 = f1.readlines()
        content2 = f2.readlines()
        if content1 == content2:
            print("DRC is clean!")
        else:
            raise ValueError("DRC failed!")
elif sum(1 for line in open(drc_filename)) > 3:
    raise ValueError("DRC failed!")
else:
    print("DRC is clean!")


##  LVS Check
if sys.argv[1] == cryo_library:    
    lvs_line = subprocess.check_output(["tail", "-1", lvs_filename]).decode(
        sys.stdout.encoding
    )
    regex = r"failed"
    match = re.search(regex, lvs_line)
    
    if match != None:
        raise ValueError("LVS failed!")
    else:
        print("LVS is clean!")
else:
    with open(lvs_filename) as f:
        f1 = f.read()
    
        if "failed" in f1:
            raise ValueError("LVS failed!")
        else:
            print("LVS is clean!")

## Result File Check
json_filename = "test.json"

if check_gen_files(json_filename, _generator_is, cryo_library):
        print("Flow check is clean!")
else:
    print("Flow check failed!")
